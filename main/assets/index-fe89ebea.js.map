{"version":3,"mappings":"kIA+CA,MAAAA,EAAAC,EAAwB,uBACtB,mBACiB,GAChB,GACA,qBACkB,IAAAC,EAAA,iDAAAC,KAAA,wmBAErB,EAEAH,EAAA;;;;;;;;;;2HCwBA,MAAAI,EAAAH,EAA4B,4BAC1B,wDACyD,uBACnC,GACrB,UACO,IAAAC,EAAA,iDAAAC,KAAA,wmBAEV,EAEAC,EAAA","names":["SegmentedButton","withWebComponent","__vitePreload","n","SegmentedButtonItem"],"sources":["../../packages/main/src/webComponents/SegmentedButton/index.tsx","../../packages/main/src/webComponents/SegmentedButtonItem/index.tsx"],"sourcesContent":["'use client';\n\nimport '@ui5/webcomponents/dist/SegmentedButton.js';\nimport { ReactNode } from 'react';\nimport { CommonProps } from '../../interfaces/CommonProps';\nimport { Ui5CustomEvent } from '../../interfaces/Ui5CustomEvent';\nimport { Ui5DomRef } from '../../interfaces/Ui5DomRef';\nimport { withWebComponent } from '../../internal/withWebComponent';\n\ninterface SegmentedButtonAttributes {\n  /**\n   * Defines the accessible ARIA name of the component.\n   */\n  accessibleName?: string;\n}\n\nexport interface SegmentedButtonDomRef extends SegmentedButtonAttributes, Ui5DomRef {\n  /**\n   * Currently selected item.\n   */\n  readonly selectedItem: ReactNode;\n}\n\nexport interface SegmentedButtonPropTypes extends SegmentedButtonAttributes, CommonProps {\n  /**\n   * Defines the items of `SegmentedButton`.\n   *\n   * **Note:** Multiple items are allowed.\n   *\n   * **Note:** Use the `SegmentedButtonItem` for the intended design.\n   */\n  children?: ReactNode | ReactNode[];\n  /**\n   * Fired when the selected item changes.\n   */\n  onSelectionChange?: (event: Ui5CustomEvent<SegmentedButtonDomRef, { selectedItem: HTMLElement }>) => void;\n}\n\n/**\n * The `SegmentedButton` shows a group of items. When the user clicks or taps one of the items, it stays in a pressed state. It automatically resizes the items to fit proportionally within the component. When no width is set, the component uses the available width.\n *\n * **Note:** There can be just one selected `item` at a time.\n *\n * __Note:__ This component is a web component developed by the UI5 Web Components’ team.\n *\n * <ui5-link href=\"https://sap.github.io/ui5-webcomponents/playground/components/SegmentedButton\" target=\"_blank\">UI5 Web Components Playground</ui5-link>\n */\nconst SegmentedButton = withWebComponent<SegmentedButtonPropTypes, SegmentedButtonDomRef>(\n  'ui5-segmented-button',\n  ['accessibleName'],\n  [],\n  [],\n  ['selection-change'],\n  () => import('@ui5/webcomponents/dist/SegmentedButton.js')\n);\n\nSegmentedButton.displayName = 'SegmentedButton';\n\nexport { SegmentedButton };\n","'use client';\n\nimport '@ui5/webcomponents/dist/SegmentedButtonItem.js';\nimport { ReactNode, MouseEventHandler } from 'react';\nimport { CommonProps } from '../../interfaces/CommonProps';\nimport { Ui5DomRef } from '../../interfaces/Ui5DomRef';\nimport { withWebComponent } from '../../internal/withWebComponent';\n\ninterface SegmentedButtonItemAttributes {\n  /**\n   * Determines whether the component is displayed as pressed.\n   */\n  pressed?: boolean;\n  /**\n   * Defines the accessible ARIA name of the component.\n   */\n  accessibleName?: string;\n  /**\n   * Receives id(or many ids) of the elements that label the component.\n   */\n  accessibleNameRef?: string;\n  /**\n   * Defines whether the component is disabled. A disabled component can't be pressed or focused, and it is not in the tab chain.\n   */\n  disabled?: boolean;\n  /**\n   * Defines the icon, displayed as graphical element within the component. The SAP-icons font provides numerous options.\n   *\n   * Example: See all the available icons within the <ui5-link target=\"_blank\" href=\"https://sdk.openui5.org/test-resources/sap/m/demokit/iconExplorer/webapp/index.html\" class=\"api-table-content-cell-link\">Icon Explorer</ui5-link>.\n   */\n  icon?: string;\n  /**\n   * Defines the tooltip of the component.\n   * **Note:** A tooltip attribute should be provided for icon-only buttons, in order to represent their exact meaning/function.\n   */\n  tooltip?: string;\n}\n\nexport interface SegmentedButtonItemDomRef extends SegmentedButtonItemAttributes, Ui5DomRef {\n  /**\n   * An object of strings that defines several additional accessibility attribute values for customization depending on the use case. It supports the following fields:\n   *\n   * *   `expanded`: Indicates whether the button, or another grouping element it controls, is currently expanded or collapsed. Accepts the following string values:\n   *     *   `true`\n   *     *   `false`\n   * *   `hasPopup`: Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by the button. Accepts the following string values:\n   *     *   `Dialog`\n   *     *   `Grid`\n   *     *   `ListBox`\n   *     *   `Menu`\n   *     *   `Tree`\n   * *   `controls`: Identifies the element (or elements) whose contents or presence are controlled by the button element. Accepts a string value.\n   */\n  accessibilityAttributes: Record<string, unknown>;\n}\n\nexport interface SegmentedButtonItemPropTypes extends SegmentedButtonItemAttributes, Omit<CommonProps, 'onClick'> {\n  /**\n   * Defines the text of the component.\n   *\n   * **Note:** Although this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.\n   */\n  children?: ReactNode | ReactNode[];\n  /**\n   * Fired when the component is activated either with a mouse/tap or by using the Enter or Space key.\n   *\n   * **Note:** The event will not be fired if the `disabled` property is set to `true`.\n   */\n  onClick?: MouseEventHandler<SegmentedButtonItemDomRef>;\n}\n\n/**\n * Users can use the `SegmentedButtonItem` as part of a `SegmentedButton`.\n *\n * Clicking or tapping on a `SegmentedButtonItem` changes its state to `pressed`. The item returns to its initial state when the user clicks or taps on it again. By applying additional custom CSS-styling classes, apps can give a different style to any `SegmentedButtonItem`.\n *\n * __Note:__ This component is a web component developed by the UI5 Web Components’ team.\n *\n * <ui5-link href=\"https://sap.github.io/ui5-webcomponents/playground/components/SegmentedButton\" target=\"_blank\">UI5 Web Components Playground</ui5-link>\n */\nconst SegmentedButtonItem = withWebComponent<SegmentedButtonItemPropTypes, SegmentedButtonItemDomRef>(\n  'ui5-segmented-button-item',\n  ['accessibleName', 'accessibleNameRef', 'icon', 'tooltip'],\n  ['pressed', 'disabled'],\n  [],\n  ['click'],\n  () => import('@ui5/webcomponents/dist/SegmentedButtonItem.js')\n);\n\nSegmentedButtonItem.displayName = 'SegmentedButtonItem';\n\nexport { SegmentedButtonItem };\n"],"file":"assets/index-fe89ebea.js"}